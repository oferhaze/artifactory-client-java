import static java.lang.System.getenv

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath(group: 'org.jfrog.buildinfo', name: 'build-info-extractor-gradle', version: '2.2.2')
        classpath(group: 'eu.appsatori', name: 'gradle-fatjar-plugin', version: '0.2-rc1')
    }
}

allprojects {

    apply plugin: 'maven-publish'
    apply plugin: 'artifactory-publish'

    group = 'org.jfrog.artifactory.client'
    version = currentVersion
    status = version.endsWith('-SNAPSHOT') ? 'integration' : 'release'

    project.tasks.withType(Jar).each {
        it.version = currentVersion
    }

    artifactory {
       // contextUrl = 'https://oss.jfrog.org'
        contextUrl = 'http://10.0.0.168:8081/artifactory'
    }
}

subprojects {
    apply plugin: 'java'


    sourceCompatibility = 1.7
    targetCompatibility = 1.7

    final env = getenv()

    artifactory {
        contextUrl = 'https://oss.jfrog.org'
        resolve {
            repository {
                repoKey = 'libs-release'
            }
        }
        publish {
            repository {
                repoKey = 'oss-snapshot-local' //The Artifactory repository key to publish to
                //when using oss.jfrog.org the credentials are from Bintray. For local build we expect them to be found in
                //~/.gradle/gradle.properties, otherwise to be set in the build server
                username = project.hasProperty('bintrayUser') ? project.bintrayUser : getenv()['BINTRAY_USER']
                password = project.hasProperty('bintrayKey') ? project.bintrayKey : getenv()['BINTRAY_KEY']
            }
            defaults {
                publications 'main'
            }
        }
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    // add javadoc/source jar tasks as artifacts
    artifacts {
        archives sourcesJar, javadocJar, jar
    }

    test {
        useTestNG()
        testLogging {
            exceptionFormat "full"
            events "started", "passed", "skipped", "failed", "standardOut", "standardError"
            minGranularity 0
        }
    }

    publishing {
        publications {
            main(MavenPublication) {
                from components.java
                artifact sourcesJar
                artifact javadocJar

                pom.withXml {
                    asNode().with {
                        appendNode('packaging', 'jar')
                        appendNode('name', 'artifactory-java-client')
                        appendNode('description', 'Java client for working with Artifactory')
                        appendNode('url', 'https://github.com/JFrogDev/artifactory-client-java')
                        appendNode('licenses').with {
                            appendNode('license').with {
                                appendNode('name', 'The Apache Software License, Version 2.0')
                                appendNode('url', 'http://www.apache.org/licenses/LICENSE-2.0')
                            }
                        }
                        appendNode('developers').with {
                            appendNode('developer').with {
                                appendNode('id', 'jbaruch')
                                appendNode('name', 'Baruch Sadogursky')
                                appendNode('email', 'jbaruch@jfrog.com')
                            }
                        }
                        appendNode('scm').with {
                            appendNode('connection', 'git@github.com:JFrogDev/artifactory-client-java.git')
                            appendNode('developerConnection', 'git@github.com:JFrogDev/artifactory-client-java.git')
                            appendNode('url', 'https://github.com/JFrogDev/artifactory-client-java')
                        }
                    }
                }
            }
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.10'
}
